
.temp.file.elf:     file format elf32-littleriscv

SYMBOL TABLE:
00000000 l    d  .init	00000000 .init
00000054 l    d  .text	00000000 .text
02000000 l    d  .data	00000000 .data
02000000 l    d  .bss	00000000 .bss
02000000 l    d  .stack	00000000 .stack
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    df *ABS*	00000000 tls.c
00000000 l    df *ABS*	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
0000006f l       .debug_info	00000000 
00000000 g       *ABS*	00000000 __data_size
02000800 g       .data	00000000 __global_pointer$
02000000 g       .bss	00000000 __tls_base
00000100 g       *ABS*	00000000 __flash_size
00000040 g       *ABS*	00000000 __stack_size
00000000 g       *ABS*	00000000 __bss_size
00000094 g     F .text	00000024 memcpy
02000000 g       .bss	00000000 __bss_end
00000000 g       *ABS*	00000000 __tbss_size
0000008c g     F .text	00000008 _set_tls
00000000 g     F .init	00000000 _start
02000000 g       *ABS*	00000000 __ram
02000000 g       .bss	00000000 __data_end
000000d4 g       .text	00000000 __text_end
0000006f  w      .debug_info	00000000 .hidden t2b_ex1.c.4aafd857
02000000 g       .bss	00000000 __bss_start
000000b8 g     F .text	0000001c memset
00000054 g     F .text	00000038 main
00000100 g       *ABS*	00000000 __ram_size
02000100 g       .init	00000000 __stack
00000000 g     F *ABS*	00000000 vfscanf
000000d8 g       *ABS*	00000000 __data_source
00000000 g       *ABS*	00000000 __flash
02000000 g       .data	00000000 __data_start
00000000 g     F *ABS*	00000000 vfprintf



Disassembly of section .init:

00000000 <_start>:
   0:	    02000117          	auipc	x2,0x2000
   4:	    10010113          	addi	x2,x2,256 # 2000100 <__stack>
   8:	    02000197          	auipc	x3,0x2000
   c:	    7f818193          	addi	x3,x3,2040 # 2000800 <__global_pointer$>
  10:	    02000517          	auipc	x10,0x2000
  14:	    ff050513          	addi	x10,x10,-16 # 2000000 <__bss_end>
  18:	    0d800593          	addi	x11,x0,216
  1c:	    00000613          	addi	x12,x0,0
  20:	    074000ef          	jal	x1,94 <memcpy>
  24:	    02000517          	auipc	x10,0x2000
  28:	    fdc50513          	addi	x10,x10,-36 # 2000000 <__bss_end>
  2c:	    00000593          	addi	x11,x0,0
  30:	    00000613          	addi	x12,x0,0
  34:	    084000ef          	jal	x1,b8 <memset>
  38:	    02000517          	auipc	x10,0x2000
  3c:	    fc850513          	addi	x10,x10,-56 # 2000000 <__bss_end>
  40:	    04c000ef          	jal	x1,8c <_set_tls>
  44:	    00000513          	addi	x10,x0,0
  48:	    00000593          	addi	x11,x0,0
  4c:	    008000ef          	jal	x1,54 <main>
  50:	/-- 0000006f          	jal	x0,50 <__stack_size+0x10>

Disassembly of section .text:

00000054 <main>:
     ### 
     ### #endif
     ### 
     ### // main function
     ### int main() {
     ###     SUM = 0;
  54:	    020007b7          	lui	x15,0x2000
  58:	    000780a3          	sb	x0,1(x15) # 2000001 <__bss_end+0x1>
     ###     for (int i = 1; i <= N; i++) {
  5c:	    00100713          	addi	x14,x0,1
     ###         SUM = SUM + i;
  60:	    020006b7          	lui	x13,0x2000
     ###     for (int i = 1; i <= N; i++) {
  64:	    00b00613          	addi	x12,x0,11
     ###         SUM = SUM + i;
  68:	/-> 0016c783          	lbu	x15,1(x13) # 2000001 <__bss_end+0x1>
  6c:	|   00f707b3          	add	x15,x14,x15
  70:	|   0ff7f793          	andi	x15,x15,255
  74:	|   00f680a3          	sb	x15,1(x13)
     ###         _put_value(SUM);
  78:	|   0016c783          	lbu	x15,1(x13)
     ###     for (int i = 1; i <= N; i++) {
  7c:	|   00170713          	addi	x14,x14,1
  80:	\-- fec714e3          	bne	x14,x12,68 <main+0x14>
     ###     }
     ###     return 0;
     ### }
  84:	    00000513          	addi	x10,x0,0
  88:	    00008067          	jalr	x0,0(x1)

0000008c <_set_tls>:
  8c:	00050213          	addi	x4,x10,0
  90:	00008067          	jalr	x0,0(x1)

00000094 <memcpy>:
  94:	       00050313          	addi	x6,x10,0
  98:	/----- 00060e63          	beq	x12,x0,b4 <memcpy+0x20>
  9c:	|  /-> 00058383          	lb	x7,0(x11)
  a0:	|  |   00730023          	sb	x7,0(x6)
  a4:	|  |   fff60613          	addi	x12,x12,-1
  a8:	|  |   00130313          	addi	x6,x6,1
  ac:	|  |   00158593          	addi	x11,x11,1
  b0:	|  \-- fe0616e3          	bne	x12,x0,9c <memcpy+0x8>
  b4:	\----> 00008067          	jalr	x0,0(x1)

000000b8 <memset>:
  b8:	       00050313          	addi	x6,x10,0
  bc:	/----- 00060a63          	beq	x12,x0,d0 <memset+0x18>
  c0:	|  /-> 00b30023          	sb	x11,0(x6)
  c4:	|  |   fff60613          	addi	x12,x12,-1
  c8:	|  |   00130313          	addi	x6,x6,1
  cc:	|  \-- fe061ae3          	bne	x12,x0,c0 <memset+0x8>
  d0:	\----> 00008067          	jalr	x0,0(x1)

000000d4 <__text_end>:
  d4:	0000                	c.unimp
	...
